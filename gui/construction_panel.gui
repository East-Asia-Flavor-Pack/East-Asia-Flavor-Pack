# COPY-PASTED FOR NOW
@panel_width_minus_10 = 530			# used to be 450
@panel_width = 540  				# used to be 460
@panel_width_half = 270				# used to be 230
@panel_width_plus_10 = 550  		# used to be 470
@panel_width_plus_14 = 554			# used to be 474
@panel_width_plus_14_half = 277		# used to be 237
@panel_width_plus_20 = 560			# used to be 480
@panel_width_plus_30 = 570			# used to be 490
@panel_width_plus_70 = 610			# used to be 530

@foreign_invest_icon_size = 30

types construction_panel
{
	type construction_panel = default_block_window_two_lines {
		name = "construction_panel"
		
		blockoverride "window_header_name"
		{
			text = "CONSTRUCTION"
		}

		blockoverride "window_header_container_line_two" 
		{
			
		}

		#TOP
		blockoverride "fixed_top"
		{
			#TABS
			tab_buttons = {
				blockoverride "first_button"
				{
					text = "CONSTRUCTION_TAB_DOMESTIC"
				}
				blockoverride "first_button_tooltip" {
					tooltip = "CONSTRUCTION_TAB_DOMESTIC"
				}
				blockoverride "first_button_click"
				{
					onclick = "[InformationPanel.SelectTab('default')]"
				}
				blockoverride "first_button_visibility"
				{
					visible = "[InformationPanel.IsTabSelected('default')]"
				}
				blockoverride "first_button_visibility_checked"
				{
					visible = "[Not( InformationPanel.IsTabSelected('default') )]"
				}
				blockoverride "first_button_selected"
				{
					text = "CONSTRUCTION_TAB_DOMESTIC"
				}

				blockoverride "second_button"
				{
					text = "CONSTRUCTION_TAB_FOREIGN"
				}
				blockoverride "second_button_tooltip" {
					tooltip = "CONSTRUCTION_TAB_FOREIGN"
				}
				blockoverride "second_button_click"
				{
					onclick = "[InformationPanel.SelectTab('foreign_queues')]"
				}
				blockoverride "second_button_visibility"
				{
					visible = "[InformationPanel.IsTabSelected('foreign_queues')]"
				}
				blockoverride "second_button_visibility_checked"
				{
					visible = "[Not( InformationPanel.IsTabSelected('foreign_queues') )]"
				}
				blockoverride "second_button_selected"
				{
					text = "CONSTRUCTION_TAB_FOREIGN"
				}
			}
			
			widget = { size = { 1 10 }}
		}
		
		blockoverride "scrollarea_content" {
			# DOMESTIC QUEUE TAB CONTENTS
			flowcontainer = {
				name = "domestic_queue"
				visible = "[InformationPanel.IsTabSelected('default')]"
				direction = vertical
	
				flowcontainer = {
					using = default_list_position
					direction = vertical


					flowcontainer = {
						name = "construction_sector_or_no_sector"
						parentanchor = hcenter
						margin_top = 10
						margin_bottom = 10

			
						datacontext_from_model = {
						    datamodel = "[ConstructionPanel.GetConstructionEntries]"
						    index = 0
						} 

						# Construction Sector
						old_buildings_production_method_item = {
							#visible check in type
						}

						# No Construction Sector
						widget = {
							size = { @panel_width_plus_14 95 }
							visible = "[IsDataModelEmpty(BuildingProductionMethodsEntry.GetBuildings)]"
							datacontext = "[GetBuildingType('building_construction_sector')]"


					    	### building icon
					    	icon = {
					    		texture = "[BuildingType.GetIcon]"
					    		enabled = no
					    		size = { 100 100 }
					    		position = { 7 0 }
					    		parentanchor = vcenter
					    	}

							### DROPDOWN / EXPAND
							textbox = {
								position = { 110 0 }
								size = { 440 38 }
								
								raw_text = "CONSTRUCTION_QUEUE_NO_CONSTRUCTION_SECTOR"

								align = nobaseline
								margin = {10 0}

								using = empty_state_text_properties
								using = fontsize_large	
										
								background = {
									using = entry_bg_simple
								}					
							}

							# INFO AREA BELOW THE DROPDOWN
							widget = {
								position = { 110 38 }
								size = { 440 57 }

								construction_queue_sector_actions = {
									layoutpolicy_horizontal = expanding
									layoutpolicy_vertical = expanding
								}
								
							}
						}
					}
						
	
					datacontext = "[AccessPlayer]"
	
					construction_queue = {}
				}
			}

			# FOREIGN QUEUE TAB CONTENTS
			flowcontainer = {
				visible = "[InformationPanel.IsTabSelected('foreign_queues')]"

				parentanchor = hcenter
				datamodel = "[AccessPlayer.GetPotentialInvestors]"
				direction = vertical

				textbox = {
					parentanchor = hcenter
					align = hcenter|nobaseline
					autoresize = yes
					multiline = yes
					margin = { 10 10 }
					max_width = @panel_width_minus_10
					using = empty_state_text_properties
					visible = "[IsDataModelEmpty(AccessPlayer.GetPotentialInvestors)]"
					text = "FOREIGN_QUEUE_NO_INVESTORS_EMPTY_STATE"
				}

				item = { # ITEM FOR EACH COUNTRY
					flowcontainer = {
						parentanchor = hcenter
						direction = vertical

						default_header_2texts = {
							blockoverride "text1" {
								text = "FOREIGN_QUEUE_COUNTRY_HEADER"
							}
							blockoverride "right" {
								flowcontainer = {
									position = { -12 0 }
									parentanchor = right|vcenter
									datacontext = "[Country]"

									icon = {
										visible = "[GetPlayer.IsAnySubjectOf( Country.Self )]"
										name = "overlord"
										texture = "gfx/interface/icons/lens_toolbar_icons/overlord.dds"
										size = { @foreign_invest_icon_size @foreign_invest_icon_size }
										tooltip = FOREIGN_QUEUE_COUNTRY_OVERLORD_TT

									}

									icon = {
										visible = "[GetPlayer.HasDiplomaticPactWith( Country.Self, 'foreign_investment_agreement' )]"
										name = "mutual_pact"
										texture = "gfx/interface/icons/lens_toolbar_icons/foreign_investment_agreement.dds"
										size = { @foreign_invest_icon_size @foreign_invest_icon_size }
										tooltip = FOREIGN_QUEUE_COUNTRY_MUTUAL_PACT_TT
									}
									icon = {
										visible = "[GetPlayer.HasDiplomaticPactWith( Country.Self, 'foreign_investment_rights' )]"
										name = "one_way_pact"
										texture = "gfx/interface/icons/lens_toolbar_icons/grant_foreign_investment_rights.dds"
										size = { @foreign_invest_icon_size @foreign_invest_icon_size }
										tooltip = FOREIGN_QUEUE_COUNTRY_ONE_WAY_PACT_TT
									}
								}
							}
						}


						fixedgridbox = {
							datamodel = "[Country.GetConstructionsInCountry(AccessPlayer.Self)]"

							addcolumn = 540
							addrow = 40

							parentanchor = hcenter

							item = { # ITEM FOR EACH QUEUED CONSTRUCTION
								construction_queue_item = {}
							}
						}	

						textbox = {
							parentanchor = hcenter
							margin = { 10 10 }
							align = hcenter|nobaseline
							autoresize = yes
							multiline = yes
							max_width = @panel_width_minus_10
							using = empty_state_text_properties
							visible = "[IsDataModelEmpty(Country.GetConstructionsInCountry(AccessPlayer.Self))]"
							text = "FOREIGN_QUEUE_NO_CONSTRUCTION_EMPTY_STATE"
						}
					}
				}				
			}
		}
		
		blockoverride "fixed_bottom" {
			# DOMESTIC QUEUE PAGE BUTTONS
			vbox = {
				name = "construction_queue_pages"
				layoutpolicy_horizontal = expanding
				visible = "[InformationPanel.IsTabSelected('default')]"
				

				divider_clean = {
					visible = "[Or(And(ConstructionPanel.IsShowingGovernmentConstructions, GreaterThan_int32(ConstructionPanel.GetNumGovernmentConstructionQueuePages(GetMetaPlayer.GetPlayedOrObservedCountry), '(int32)1')), And(ConstructionPanel.IsShowingPrivateConstructions,GreaterThan_int32(ConstructionPanel.GetNumPrivateConstructionQueuePages(GetMetaPlayer.GetPlayedOrObservedCountry), '(int32)1')))]"
					size = { @panel_width_plus_14 2 }
				}

				flowcontainer = {
					margin_top = 10
					margin_bottom = 5
					flowcontainer = {
						visible = "[And(ConstructionPanel.IsShowingGovernmentConstructions, GreaterThan_int32(ConstructionPanel.GetNumGovernmentConstructionQueuePages(GetMetaPlayer.GetPlayedOrObservedCountry), '(int32)1'))]"
						spacing = 20

						button_select_arrow = {
							size = { 25 25 }
							mirror = horizontal
							parentanchor = vcenter
							using = decrease_button_sound
							using = tooltip_above

							block "tooltip_left_arrow" {
								tooltip = "PREVIOUS_PAGE"
							}

							block "onclick_prev"
							{
								onclick = "[ConstructionPanel.PrevGovernmentConstructionQueuePage(GetMetaPlayer.GetPlayedOrObservedCountry)]"
							}
						}

						text_single = {
							text = "CONSTRUCTION_CURRENT_PAGE"
							parentanchor = vcenter
							align = nobaseline
						}

						button_select_arrow = {
							size = { 25 25 }
							parentanchor = vcenter
							using = increase_button_sound
							using = tooltip_above

							block "tooltip_right_arrow" {
								tooltip = "NEXT_PAGE"
							}

							block "onclick_next"
							{
								onclick = "[ConstructionPanel.NextGovernmentConstructionQueuePage(GetMetaPlayer.GetPlayedOrObservedCountry)]"
							}
						}
					}
					
					flowcontainer = {
						visible = "[And(ConstructionPanel.IsShowingPrivateConstructions,GreaterThan_int32(ConstructionPanel.GetNumPrivateConstructionQueuePages(GetMetaPlayer.GetPlayedOrObservedCountry), '(int32)1'))]"
						spacing = 20

						button_select_arrow = {
							size = { 25 25 }
							mirror = horizontal
							parentanchor = vcenter
							using = decrease_button_sound
							using = tooltip_above

							block "tooltip_left_arrow" {
								tooltip = "PREVIOUS_PAGE"
							}

							block "onclick_prev"
							{
								onclick = "[ConstructionPanel.PrevPrivateConstructionQueuePage(GetMetaPlayer.GetPlayedOrObservedCountry)]"
							}
						}

						text_single = {
							text = "CONSTRUCTION_CURRENT_PAGE_PRIVATE"
							parentanchor = vcenter
							align = nobaseline
						}

						button_select_arrow = {
							size = { 25 25 }
							parentanchor = vcenter
							using = increase_button_sound
							using = tooltip_above

							block "tooltip_right_arrow" {
								tooltip = "NEXT_PAGE"
							}

							block "onclick_next"
							{
								onclick = "[ConstructionPanel.NextPrivateConstructionQueuePage(GetMetaPlayer.GetPlayedOrObservedCountry)]"
							}
						}
					}
				}
			}


		}
	}
}
